version: '3.7'

services:

  nginx:
    image: nginx:stable-alpine
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
    networks:
      - nginx
    volumes:
      - /data/configs/nginx:/etc/nginx:ro
      - nginx-logs:/var/log/nginx
      - certbot-webroot:/webroot
      - certbot-etc:/etc/letsencrypt
      - /data/configs/nginx/ssl:/ssl
      - type: tmpfs
        target: /var/cache/nginx
        tmpfs:
          size: 104857600 # 100 Mb
      - type: tmpfs
        target: /run
        tmpfs:
          size: 1048576 # 1 Mb
    deploy:
      placement:
        constraints:
          - node.hostname == swarm01

  certbot:
    image: certbot/certbot
    command: renew --no-self-upgrade --agree-tos --text --non-interactive --keep-until-expiring --expand --email andyceo@yandex.ru
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-lib:/var/lib/letsencrypt
      - certbot-log:/var/log/letsencrypt
      - certbot-webroot:/webroot
    deploy:
      placement:
        constraints:
          - node.hostname == swarm01
      restart_policy:
        condition: any
        delay: 48h

  jenkins:
    image: jenkins/jenkins:lts-alpine
    networks:
      - nginx
      - jenkins
      - influxdb
    volumes:
      - jenkins:/var/jenkins_home
    environment:
      PATH: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/var/jenkins_home/sbt/bin
      JAVA_OPTS: -Dhudson.footerURL=https://jenkins.ergoplatform.com -Dorg.apache.commons.jelly.tags.fmt.timeZone=Europe/Moscow
      JENKINS_JAVA_OPTIONS: -Djava.awt.headless=true -Dhudson.security.csrf.requestfield=crumb -Xms128m -Xmx512m
    deploy:
      placement:
        constraints:
          - node.hostname == swarm01

  jenkins-slave-01:
    image: andyceo/phpdevenv:1.7-ubuntu16.04
    volumes:
      - jenkins-slave-01:/root
    networks:
      - jenkins
    deploy:
      placement:
        constraints:
          - node.hostname == swarm01
      resources:
        limits:
          cpus: '3'
          memory: 6G
        reservations:
          cpus: '0.1'

  grafana:
    image: grafana/grafana:5.3.4
    networks:
      - nginx
      - influxdb
    environment:
      GF_SERVER_ROOT_URL: "https://grafana.ergoplatform.com"
    volumes:
      - grafana-data:/var/lib/grafana:rw
      - grafana-logs:/var/log/grafana:rw
      - grafana-conf:/etc/grafana:rw
    deploy:
      placement:
        constraints:
          - node.hostname == swarm01

  portainer:
    image: portainer/portainer
    networks:
      - nginx
    volumes:
      - portainer:/data
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      placement:
        constraints:
          - node.hostname == swarm01

  adminer:
    image: adminer:4-standalone
    networks:
      - postgres
      - nginx

  dockerhub-webhooks:
    image: andyceo/dockerhub-webhooks
    networks:
      - nginx
    volumes:
      - /data/configs/dockerhub-webhooks/config.json:/app/config.json
      - /data/stacks:/data/stacks
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      placement:
        constraints:
          - node.hostname == swarm01

networks:
  nginx:
  jenkins:
  influxdb:
    external: true
    name: databases_influxdb
  postgres:
    external: true
    name: explorer_postgres

volumes:
  portainer:
  grafana-data:
  grafana-logs:
  grafana-conf:
  jenkins:
  jenkins-slave-01:
  nginx-logs:
  certbot-etc:
  certbot-lib:
  certbot-log:
  certbot-webroot:
