dbrp "monitoring"."autogen"

var period=30m

var data = stream
    |from()
        .measurement('node_info')
    |groupBy('name')
    |window()
        .period(period)
        .every(5m)

var first = data
    |first('headersHeight')
        .as('headersHeight')
        .quiet()

var last = data
    |last('headersHeight')
        .as('headersHeight')
        .quiet()

first
    |join(last)
        .as('first', 'last')
//    |httpOut('after_join')
    |alert()
        .id('{{ index .Tags "name" }}')
        .message('{{ .Time }}: Ergo node {{ .ID }} (IP={{ index .Fields "last.ip" }}) headersHeight={{ index .Fields "last.headersHeight" }} {{ if eq .Level "OK" }}is OK{{ else }}not changed for ' + string(period) + '{{ end }}')
        .warn(lambda: "first.headersHeight" == "last.headersHeight")
        .warnReset(lambda: "first.headersHeight" < "last.headersHeight")
        .stateChangesOnly()
        .log('/var/log/kapacitor/ergo_node_height.log')
        .slack()
